String

Easy:
  28: KMP => next[i] : prefix = suffix (end with s[i])
  344: easy to figure out double pointer => time O(n) space O(1)
  459: method1 => divide with no remainder => traverse 1 - n/2
               => time O(n2) space O(n)
       method2 => if s is periodic <-> s|s contains s which s starts in (0, n) *** proof
               => time O(n) space O(n) -> KMP next
  541: easy to figure out double pointer, pay attention to the border. => time O(n) space O(1)
  Offer 05 : traverse => time O(n) space O(n)
  Offer 58-2 : substr(pos, len) => time O(n) space O(n)
               reverse(0, n-1), reverse(n, end), reverse all => time O(n) space O(1)
 
 Medium:
  91: dp => dp[i]: the number of different mapping which ends with s[i] -> dp[i] = [ dp[i-2] , if s[i] = 0 and s[i-1]=1/2;
                                                                                   [ dp[i-1] + dp[i-2] , if s[i-1] = 1 or s[i-1] = 2 and s[i] = 1-6;
                                                                                   [ dp[i-1], if s[i-1] = 0/3-9 or s[i-1] = 2 and s[i] = 7-9
         => time O(n) space O(1)
  151: method1 => trim spaces O(n) -> reverse the whole string -> reverse words
               => time O(n) space O(1)
       method2 => trim spaces -> stack
